name: Deploy to GCP

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to GCP Compute Engine
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Trigger instance update
        run: |
          gcloud compute instances add-metadata randomvalidator-instance \
            --zone=${{ secrets.GCP_ZONE }} \
            --metadata=deployment-trigger="$(date +%s)"

      - name: SSH and deploy
        run: |
          gcloud compute ssh randomvalidator-instance \
            --zone=${{ secrets.GCP_ZONE }} \
            --command="
              set -e

              # Create directory if it doesn't exist
              if [ ! -d /opt/randomvalidator ]; then
                echo 'Setting up /opt/randomvalidator for first time...'
                sudo mkdir -p /opt/randomvalidator
                sudo chown \$USER:\$USER /opt/randomvalidator
              fi

              # Clone or update repository
              if [ ! -d /opt/randomvalidator/.git ]; then
                echo 'Cloning repository...'
                git clone ${{ github.server_url }}/${{ github.repository }}.git /opt/randomvalidator
              else
                echo 'Updating repository...'
                cd /opt/randomvalidator
                git fetch origin
                git reset --hard origin/main
              fi

              # Build NIST test suite
              echo 'Building NIST test suite...'
              cd /opt/randomvalidator/nist/sts-2.1.2/sts-2.1.2
              make clean && make

              # Build Rust application
              cd /opt/randomvalidator
              source \$HOME/.cargo/env || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
              source \$HOME/.cargo/env
              echo 'Building application...'
              cargo build --release --bin server

              # Restart service if it exists, otherwise just report success
              if sudo systemctl status randomvalidator >/dev/null 2>&1; then
                echo 'Restarting service...'
                sudo systemctl restart randomvalidator
              else
                echo 'Service not configured yet - binary built successfully at target/release/server'
              fi

              echo 'Deployment complete!'
            "

      - name: Verify deployment
        run: |
          INSTANCE_IP=$(gcloud compute instances describe randomvalidator-instance \
            --zone=${{ secrets.GCP_ZONE }} \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo "Application URL: http://$INSTANCE_IP:3000"
          sleep 10
          curl -f "http://$INSTANCE_IP:3000" || echo "Warning: Application may still be starting"
